from mido import Message, MidiFile, MidiTrack, MetaMessage, bpm2tempo

# Constants
BPM = 66
TICKS_PER_BEAT = 480
TEMPO = bpm2tempo(BPM)

NOTE = 36  # C1 Kick
CHANNEL = 9  # Channel 10 in MIDI (starts from 0)

# Pattern A (cleaned, no janky middle kick)
KICK_VELOCITY_A = [115, 105, 110, 100]
KICK_POSITIONS_A = [0, 0.5, 2, 2.5]  # Quarter note = 1.0, 16th note = 0.25

# Pattern B (unchanged)
KICK_VELOCITY_B = [115, 105, 110, 100, 90]
KICK_POSITIONS_B = [0, 0.5, 2, 2.5, 3.75]

# Bar layout
start_bar = 5
bars_intro = [5]
bars_silence = [6, 7, 8]
bars_main_1 = list(range(9, 22))  # 9–21
bars_breakdown = list(range(22, 31))
bars_main_2 = list(range(31, 43))  # 31–42

# Create MIDI
mid = MidiFile(ticks_per_beat=TICKS_PER_BEAT)
track = MidiTrack()
mid.tracks.append(track)

# Set tempo
track.append(Message('program_change', program=0, time=0))
track.append(MetaMessage('set_tempo', tempo=TEMPO))

def add_kick(bar, positions, velocities):
    for pos, vel in zip(positions, velocities):
        total_beats = (bar - 1) * 4 + pos
        tick = int(total_beats * TICKS_PER_BEAT)
        track.append(Message('note_on', note=NOTE, velocity=vel, time=tick - track[-1].time if track else tick, channel=CHANNEL))
        track.append(Message('note_off', note=NOTE, velocity=0, time=60, channel=CHANNEL))  # 1/16 note duration

# Add tag accent (on bar 5.3.1)
add_kick(5, [2], [120])  # Beat 3

# Add main pattern 1
for i, bar in enumerate(bars_main_1):
    if i % 2 == 0:
        add_kick(bar, KICK_POSITIONS_A, KICK_VELOCITY_A)
    else:
        add_kick(bar, KICK_POSITIONS_B, KICK_VELOCITY_B)

# No kick in breakdown

# Add main pattern 2
for i, bar in enumerate(bars_main_2):
    if i % 2 == 0:
        add_kick(bar, KICK_POSITIONS_A, KICK_VELOCITY_A)
    else:
        add_kick(bar, KICK_POSITIONS_B, KICK_VELOCITY_B)

# Save the MIDI
mid.save('fixed_kick_pattern.mid')
print("MIDI file saved as 'fixed_kick_pattern.mid'")
